dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/tuxracer.h)
AM_INIT_AUTOMAKE(tuxracer, "0.60")
AM_CONFIG_HEADER(config.h)

dnl Check system type
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME

dnl Checks for library functions.
AC_CHECK_FUNCS(getcwd gettimeofday strdup)

dnl Check for non-standard floating point functions and headers
AC_CHECK_FUNCS(finite isnan)
AC_CHECK_FUNCS(_finite _isnan)
AC_CHECK_HEADERS(ieeefp.h)

dnl General options
TUXRACER_EXTRA_COMPILEFLAGS="-O2"
TUXRACER_EXTRA_CFLAGS=""
TUXRACER_EXTRA_CXXFLAGS=""

AC_ARG_ENABLE(debug,     [  --enable-debug          Produce an executable with debugging symbols], TUXRACER_EXTRA_COMPILEFLAGS=-g)

AC_ARG_ENABLE(pedantic,  [  --enable-pedantic       Enable -pedantic (and -ansi for C) when compiling], TUXRACER_EXTRA_CFLAGS="$TUXRACER_EXTRA_CFLAGS -ansi -pedantic"; TUXRACER_EXTRA_CXXFLAGS="$TUXRACER_EXTRA_CXXFLAGS -pedantic")

AC_ARG_ENABLE(profile,[  --enable-profile        Produce a profiled executable],  TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -pg")


dnl Check for cygwin
dnl I don't use -mwindows since I like having the console around
dnl If the console annoys you then remove "-luser32 -lgdi32" and replace
dnl with "-mwindows"
case "$host" in
*cygwin*) LIBS="-luser32 -lgdi32 $LIBS"
esac

dnl Tcl options
TCL_LIB_NAME=tcl

AC_ARG_WITH(tcl-libs,    [  --with-tcl-libs=DIR     Specify Tcl 8.0 library location],TCL_LIB_PATH="-L$withval")

AC_ARG_WITH(tcl-inc,     [  --with-tcl-inc=DIR      Specify Tcl 8.0 header file location],TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -I$withval")

AC_ARG_WITH(tcl-lib-name,[  --with-tcl-lib-name=NAME Specify Tcl 8.0 library base name],TCL_LIB_NAME="$withval")

dnl Check for Tcl >= 8.0
LIBS="$LIBS -lm $TCL_LIB_PATH"
AC_CHECK_LIB(dl, dlopen)
AC_CHECK_LIB(tcl8.0, Tcl_Free)

if test "x$ac_cv_lib_tcl8_0_Tcl_Free" = "xno" ; then
    AC_CHECK_LIB(tcl8.2, Tcl_Free)
    if test "x$ac_cv_lib_tcl8_2_Tcl_Free" = "xno" ; then
        AC_CHECK_LIB(tcl8.3, Tcl_Free)

	if test "x$ac_cv_lib_tcl8_3_Tcl_Free" = "xno" ; then
	    dnl Added for cygwin
	    AC_CHECK_LIB(tcl80, Tcl_Free)
	    
	    if test "x$ac_cv_lib_tcl80_Tcl_Free" = "xno" ; then
		AC_CHECK_LIB($TCL_LIB_NAME, Tcl_Free,,AC_MSG_ERROR(Tcl library version >= 8.0 not found))
	    fi
	fi
    fi
fi

dnl Check for X11, taken partly from xracer sources

AC_PATH_XTRA

if ( test "x$have_x" = "xyes" && test "x$cross_compiling" = "xno" ) ; then
    LIBS="$X_PRE_LIBS $X_LIBS -lX11 -lXi -lXext -lXmu -lXt $X_EXTRA_LIBS $LIBS"
    TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS $X_CFLAGS"
fi

dnl Check for SDL
SDL_VERSION=1.0.1
AM_PATH_SDL($SDL_VERSION, TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -DHAVE_SDL=1" )
TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"

dnl Check for Joystick Support in SDL
AC_CHECK_FUNCS( SDL_JoystickOpen )

dnl Check for SDL_mixer
AC_CHECK_LIB(SDL_mixer, Mix_OpenAudio, TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -DHAVE_SDL_MIXER=1"; LIBS="-lSDL_mixer $LIBS")

dnl Check for OpenGL.
dnl Taken partly from xracer sources

dnl Put -I/usr/include at front so things in /usr/include/GL are
dnl looked at first -- but only if not cross-compiling.
if test "x$cross_compiling" = "xno" ; then 
    TUXRACER_EXTRA_COMPILEFLAGS="-I/usr/include $TUXRACER_EXTRA_COMPILEFLAGS"
fi

AC_ARG_ENABLE(GL,     [  --disable-GL            Do not use -lGL],ac_cv_lib_GL_glNewList=no; ac_cv_lib_GLU_gluLookAt=no)

AC_ARG_WITH(gl-libs,  [  --with-gl-libs=DIR      Specify OpenGL library location],GL_LIB_PATH="-L$withval")
AC_ARG_WITH(gl-inc,   [  --with-gl-inc=DIR       Specify OpenGL header file location],TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -I$withval")

AC_ARG_WITH(glut-libs,[  --with-glut-libs=DIR    Specify GLUT library location], GLUT_LIB_PATH="-L$withval")
AC_ARG_WITH(glut-inc, [  --with-glut-inc=DIR     Specify GLUT header file location],TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -I$withval")


LIBS="$GL_LIB_PATH $GLUT_LIB_PATH $LIBS"

AC_CHECK_LIB(GL, glNewList)

if test "x$ac_cv_lib_GL_glNewList" = "xno" ; then
    dnl Check for MesaGL.
    AC_CHECK_LIB(MesaGL, glNewList)
    if test "x$ac_cv_lib_MesaGL_glNewList" = "xno" ; then
        dnl Check for opengl32 (cygwin)
	dnl We don't actually check for the presence of any of the API 
	dnl funcs since cygwin's gcc fails to link unless the header
        dnl files are included.  There must be a better way -- if you 
	dnl know of one, let me know.
	AC_CHECK_LIB(opengl32,main,,AC_MSG_ERROR(GL library was not found))
    fi
fi

AC_CHECK_LIB(GLU, gluLookAt)
if test "x$ac_cv_lib_GLU_gluLookAt" = "xno" ; then
    dnl Check for MesaGLU.
    AC_CHECK_LIB(MesaGLU, gluLookAt)
    if test "x$ac_cv_lib_MesaGLU_gluLookAt" = "xno" ; then
        dnl Check for glu32 (cygwin)
	dnl We don't actually check for the presence of any of the API 
	dnl funcs since cygwin's gcc fails to link unless the header
        dnl files are included.  There must be a better way -- if you 
	dnl know of one, let me know.
	AC_CHECK_LIB(glu32,main,,AC_MSG_ERROR(GLU library was not found))
    fi
fi

dnl check for glx.h
dnl Set CFLAGS before this check so that it will be found if in
dnl non-standard location -- thanks to Kevin Moule <krmoule@cgl.uwaterloo.ca>
dnl for suggestion 
ac_save_CFLAGS="$CFLAGS"
CFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS $CFLAGS"
AC_CHECK_HEADERS( "GL/glx.h" )
CFLAGS="$ac_save_CFLAGS" 

dnl Check for glut
AC_CHECK_LIB(glut, glutKeyboardUpFunc)
if test "x$ac_cv_lib_glut_glutKeyboardUpFunc" = "xno" ; then
    dnl check for glut32 (cygwin)
    dnl We don't actually check for the presence of any of the API 
    dnl funcs since cygwin's gcc fails to link unless the header
    dnl files are included.  There must be a better way -- if you 
    dnl know of one, let me know.
    AC_CHECK_LIB(glut32,main,,AC_MSG_ERROR(GLUT library not found or too old version. 3.7 (beta) or later required.))
fi

dnl Turn use of stencil buffer on/off
AC_ARG_ENABLE(stencil-buffer,[  --enable-stencil-buffer Use if your hardware has a stencil buffer],TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -DUSE_STENCIL_BUFFER")

dnl Specify data directory
AC_ARG_WITH(data-dir,[  --with-data-dir=PATH    Default tuxracer data directory],TUXRACER_EXTRA_COMPILEFLAGS="$TUXRACER_EXTRA_COMPILEFLAGS -DDATA_DIR=\\\"$withval\\\"")

AC_SUBST(TUXRACER_EXTRA_COMPILEFLAGS)
AC_SUBST(TUXRACER_EXTRA_CFLAGS)
AC_SUBST(TUXRACER_EXTRA_CXXFLAGS)

AC_OUTPUT(Makefile src/Makefile)
